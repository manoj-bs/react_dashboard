{"version":3,"file":"static/js/715.dc0895ef.chunk.js","mappings":"iLA0BA,IAlBoB,SAAH,GAAwC,IAAlCA,EAAQ,EAARA,SAEfC,GADgBC,EAAAA,EAAAA,MAAdC,UACkBC,EAAAA,EAAuBC,EAAAA,EAEjD,OACE,SAAC,IAAM,CACLC,MAAM,UACNC,SAAS,QACTC,GAAI,CACFP,MAAO,CAAEQ,GAAG,eAAD,OAAiBR,EAAK,QACjCS,WAAY,CAAED,GAAIR,IAClB,SAEDD,GAGP,C,6FCYA,IAzBqB,SAAH,GAAgD,IAA1CA,EAAQ,EAARA,SAAUW,EAAK,EAALA,MACxBC,GAAiBV,EAAAA,EAAAA,MAAjBU,aAER,OACE,UAAC,IAAO,CAACJ,GAAI,CAAEK,GAAI,CAAEC,GAAI,EAAGC,GAAI,IAAM,WACpC,SAAC,IAAU,CACTT,MAAM,UACN,aAAW,cACXU,KAAK,QACLC,QAASL,EACTJ,GAAI,CACFU,QAAS,CAAET,GAAI,QACfU,YAAa,GACb,UAEF,SAAC,IAAQ,OAEX,SAAC,IAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKb,GAAI,CAAEc,SAAU,GAAI,SACzDX,IAEFX,IAGP,C,+KCrBMuB,EAAY,CAChB,CACEZ,MAAO,uBACPa,OAAQ,yBAEV,CACEb,MAAO,uBACPa,OAAQ,yBAEV,CACEb,MAAO,uBACPa,OAAQ,yBAEV,CACEb,MAAO,uBACPa,OAAQ,yBAEV,CACEb,MAAO,uBACPa,OAAQ,yBAEV,CACEb,MAAO,uBACPa,OAAQ,0BA0CZ,UAtCY,WACV,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACE,UAAC,WAAc,YACb,SAAC,IAAW,WACV,SAAC,IAAY,OAEf,UAAC,IAAS,CAACE,SAAS,KAAI,WACtB,SAAC,IAAU,CAACC,MAAM,SAASC,aAAc,EAAGT,QAAQ,KAAI,SACrDK,EAAE,eAEJF,EAAUO,KAAI,SAACC,EAAUC,GAAK,OAC7B,UAAC,IAAS,YACR,SAAC,IAAgB,CAACC,YAAY,SAAC,IAAc,IAAI,UAC/C,SAAC,IAAU,CAACZ,UAAU,IAAID,QAAQ,KAAI,SACnCK,EAAEM,EAASpB,YAGhB,SAAC,IAAgB,WACf,SAAC,IAAU,CAACL,MAAM,iBAAgB,SAC/BmB,EAAEM,EAASP,cARFQ,EAWJ,KAEd,SAAC,IAAI,CACHX,UAAWa,EAAAA,GACXC,GAAE,WAAMC,mBAAsB,eAC9BhB,QAAQ,QAAO,SAEdK,EAAE,2BAKb,C,+EC5EO,IAAMrB,EAAuB,IACvBC,EAAc,G","sources":["admin/components/AdminAppBar.tsx","admin/components/AdminToolbar.tsx","admin/pages/Faq.tsx","core/config/layout.ts"],"sourcesContent":["import AppBar from \"@material-ui/core/AppBar\";\nimport { drawerCollapsedWidth, drawerWidth } from \"../../core/config/layout\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminAppBarProps = {\n  children: React.ReactNode;\n};\n\nconst AdminAppBar = ({ children }: AdminAppBarProps) => {\n  const { collapsed } = useSettings();\n  const width = collapsed ? drawerCollapsedWidth : drawerWidth;\n\n  return (\n    <AppBar\n      color=\"default\"\n      position=\"fixed\"\n      sx={{\n        width: { lg: `calc(100% - ${width}px)` },\n        marginLeft: { lg: width },\n      }}\n    >\n      {children}\n    </AppBar>\n  );\n};\n\nexport default AdminAppBar;\n","import IconButton from \"@material-ui/core/IconButton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useSettings } from \"../../core/contexts/SettingsProvider\";\n\ntype AdminToolbarProps = {\n  children?: React.ReactNode;\n  title?: string;\n};\n\nconst AdminToolbar = ({ children, title }: AdminToolbarProps) => {\n  const { toggleDrawer } = useSettings();\n\n  return (\n    <Toolbar sx={{ px: { xs: 3, sm: 6 } }}>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        onClick={toggleDrawer}\n        sx={{\n          display: { lg: \"none\" },\n          marginRight: 2,\n        }}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h2\" component=\"h1\" sx={{ flexGrow: 1 }}>\n        {title}\n      </Typography>\n      {children}\n    </Toolbar>\n  );\n};\n\nexport default AdminToolbar;\n","import Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport AdminAppBar from \"../components/AdminAppBar\";\nimport AdminToolbar from \"../components/AdminToolbar\";\n\nconst questions = [\n  {\n    title: \"faq.questions.title1\",\n    answer: \"faq.questions.answer1\",\n  },\n  {\n    title: \"faq.questions.title2\",\n    answer: \"faq.questions.answer2\",\n  },\n  {\n    title: \"faq.questions.title3\",\n    answer: \"faq.questions.answer3\",\n  },\n  {\n    title: \"faq.questions.title4\",\n    answer: \"faq.questions.answer4\",\n  },\n  {\n    title: \"faq.questions.title5\",\n    answer: \"faq.questions.answer5\",\n  },\n  {\n    title: \"faq.questions.title6\",\n    answer: \"faq.questions.answer6\",\n  },\n];\n\nconst Faq = () => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      <AdminAppBar>\n        <AdminToolbar />\n      </AdminAppBar>\n      <Container maxWidth=\"sm\">\n        <Typography align=\"center\" marginBottom={6} variant=\"h2\">\n          {t(\"faq.title\")}\n        </Typography>\n        {questions.map((question, index) => (\n          <Accordion key={index}>\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography component=\"p\" variant=\"h6\">\n                {t(question.title)}\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography color=\"text.secondary\">\n                {t(question.answer)}\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n        ))}\n        <Link\n          component={RouterLink}\n          to={`/${process.env.PUBLIC_URL}/admin/help`}\n          variant=\"body2\"\n        >\n          {t(\"faq.noAnswerLink\")}\n        </Link>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nexport default Faq;\n","export const drawerCollapsedWidth = 104;\nexport const drawerWidth = 280;\n"],"names":["children","width","useSettings","collapsed","drawerCollapsedWidth","drawerWidth","color","position","sx","lg","marginLeft","title","toggleDrawer","px","xs","sm","edge","onClick","display","marginRight","variant","component","flexGrow","questions","answer","t","useTranslation","maxWidth","align","marginBottom","map","question","index","expandIcon","RouterLink","to","process"],"sourceRoot":""}